{"version":3,"file":"static/js/516.2b5cc6a1.chunk.js","mappings":"+QAIaA,EAAQC,EAAAA,GAAAA,MAAH,kNACI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,aAAnB,IAOP,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,SAAZ,IAGJC,EAASN,EAAAA,GAAAA,OAAH,sIAKH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,SAAZ,IAGJE,EAAUP,EAAAA,GAAAA,IAAH,6HAQPQ,GAAUR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,kIAKT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,KAAnB,IAGCC,EAAOX,EAAAA,GAAAA,GAAH,yOAWJY,EAAOZ,EAAAA,GAAAA,GAAH,kLAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,SAAZ,IACS,SAAAJ,GAAC,OAAIA,EAAEC,MAAMW,UAAZ,IAMdC,EAAQd,EAAAA,GAAAA,GAAH,uJAQLe,EAAOf,EAAAA,GAAAA,GAAH,mE,2BCkCjB,EApFe,WACb,OAAkCgB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAgCjB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAGL,KACEK,EAAAA,EAAAA,IAAaL,GAAOM,MAAK,SAAAC,GACvBC,QAAQC,IAAIF,EAAIG,KAAKC,SACjBJ,EAAIG,KAAKE,YAAc,GAG3BhB,EAAaW,EAAIG,KAAKC,QACvB,GAGF,CAFC,MAAOE,GACPC,EAAAA,GAAAA,KAAW,kDACZ,CACF,GAAE,CAACd,IAEJQ,QAAQC,IAAId,IAEV,UAACV,EAAD,YACE,kBAAM8B,SAhCW,SAAAC,GACnBA,EAAEC,iBAE0B,KAAxBD,EAAEE,OAAOC,KAAKC,OAIlBrB,EAAgB,CAAEC,MAAOgB,EAAEK,cAAcF,KAAKC,QAE9CJ,EAAEE,OAAOC,KAAKC,MAAQ,IALpBN,EAAAA,GAAAA,MAAY,6CAMf,EAsBG,WACE,SAACrC,EAAD,CACE6C,KAAK,OACLH,KAAK,OACLI,aAAa,MACbC,YAAY,mBAGd,SAACxC,EAAD,CAAQsC,KAAK,SAAb,wBAGF,gCACiB,OAAd3B,IACC,0BACE,gBAAK8B,IAAKC,EAAOC,IAAI,kBAGV,OAAdhC,IACC,SAACN,EAAD,UACGM,EAAUiC,KAAI,SAAAC,GAAI,OACjB,SAACvC,EAAD,WACE,UAACJ,EAAD,CAAS4C,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAM/B,GAA1C,UACG2B,EAAKK,aACJ,gBACET,IAAG,0CAAqCI,EAAKK,aAC7CP,IAAKE,EAAKM,OAASN,EAAKV,QAG1B,gBAAKM,IAAKW,EAAcT,IAAKE,EAAKM,OAASN,EAAKV,QAElD,SAAC3B,EAAD,UAAQqC,EAAKM,OAASN,EAAKV,WAVpBU,EAAKE,GADC,MAiBR,OAAdpC,GAAsBA,EAAU0C,QAAU,IACzC,0BACE,SAAC5C,EAAD,kEAMX,C","sources":["components/page/Movies/Movie.styled.js","components/page/Movies/Movies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const Input = styled.input`\n  background-color: ${p => p.theme.colors.secondaryText};\n  padding: 10px;\n  border: transparent;\n  border-radius: 4px;\n  margin-right: 10px;\n  font-size: 18px;\n  width: 300px;\n  box-shadow: ${p => p.theme.boxShadow};\n  outline: 0;\n`;\nexport const Button = styled.button`\n  border: transparent;\n  padding: 10px 10px;\n  border-radius: 4px;\n  font-size: 18px;\n  box-shadow: ${p => p.theme.boxShadow};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 15px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 14px;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const List = styled.ul`\n  grid-gap: 16px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  list-style: none;\n  margin: 0 auto;\n  max-width: calc(100vw - 48px);\n  padding: 0;\n  width: 1200px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: ${p => p.theme.boxShadow};\n  transition: transform ${p => p.theme.transition};\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\nexport const Title = styled.h3`\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 5px;\n`;\nexport const Info = styled.h3`\n  font-size: 50px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport { searchMovies } from 'servises/api';\nimport {\n  Wrapper,\n  Input,\n  Button,\n  NavItem,\n  List,\n  Item,\n  Title,\n  Info,\n} from './Movie.styled';\nimport Image from '../../../images/library-empty.png';\nimport ImageFefault from '../../../images/image_default.jpg';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (e.target.name.value === '') {\n      toast.error(' ðŸ¤” Enter the name of the movie!');\n      return;\n    }\n    setSearchParams({ query: e.currentTarget.name.value });\n\n    e.target.name.value = '';\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      searchMovies(query).then(res => {\n        console.log(res.data.results);\n        if (res.data.total_pages < 0) {\n          return;\n        }\n        setMovieList(res.data.results);\n      });\n    } catch (error) {\n      toast.info('Something went wrong, try changing the request!');\n    }\n  }, [query]);\n\n  console.log(movieList);\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          autocomplete=\"off\"\n          placeholder=\"Search movies\"\n        />\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      <>\n        {movieList === null && (\n          <div>\n            <img src={Image} alt=\"photoddfafa\" />\n          </div>\n        )}\n        {movieList !== null && (\n          <List>\n            {movieList.map(item => (\n              <Item key={item.id}>\n                <NavItem to={`${item.id}`} state={{ from: location }}>\n                  {item.poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                      alt={item.title || item.name}\n                    />\n                  ) : (\n                    <img src={ImageFefault} alt={item.title || item.name} />\n                  )}\n                  <Title>{item.title || item.name}</Title>\n                </NavItem>\n              </Item>\n            ))}\n          </List>\n        )}\n        {movieList !== null && movieList.length <= 0 && (\n          <div>\n            <Info>Nothing was found, try changing the query...</Info>\n          </div>\n        )}\n      </>\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","p","theme","colors","secondaryText","boxShadow","Button","Wrapper","NavItem","NavLink","white","List","Item","transition","Title","Info","useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","searchMovies","then","res","console","log","data","results","total_pages","error","toast","onSubmit","e","preventDefault","target","name","value","currentTarget","type","autocomplete","placeholder","src","Image","alt","map","item","to","id","state","from","poster_path","title","ImageFefault","length"],"sourceRoot":""}